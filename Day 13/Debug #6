#Use a Debugger
def mutate(a_list):
    b_list = []
    for item in a_list:
        new_item = item * 2
    b_list.append(new_item)
    print(b_list)

mutate([1,2,3,5,8,13])

# =====================================

""" 
Mutating a list is a common operation in Python.
It creates a new list 0 to however many items are in the list. However; it uses the mutate function to add your own numbers to specific listing numerals
So 0 = 1, 1 = 2, 2 = 3, 3 = 5, 4 = 8, 5 = 13
The result is then appended to a new list.
However, there is a bug in the code that prevents it from working as expected.

Our Next step is to figure out why

The first run of the debugger we see that the final print statement is not working as expected.
The new_item is not being appended to the b_list as expected.
The issue is that the append statement is not indented correctly.

"""

# =====================================

# Final Code

def mutate(a_list):
  b_list = []
  for item in a_list:
    new_item = item * 2
    b_list.append(new_item)
  print(b_list)

mutate([1,2,3,5,8,13])

